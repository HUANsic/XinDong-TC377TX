/**********************************************************************************************************************
 * Author: Zonghuan Wu
 * Description:
 * 
 * Version:
 *********************************************************************************************************************/

#ifndef XINDONGLIB_EI2C_H_
#define XINDONGLIB_EI2C_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "XinDong_Config.h"

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
typedef enum {
	EI2C_OK = 0,
	EI2C_NO_DEVICE,
	EI2C_INVALID_ADDRESS,
	EI2C_ACK_MISSING,
	EI2C_WRONG_DEVICE,
	EI2C_NO_ACCESS,
	EI2C_NOT_READY
} EI2C_Status;

typedef struct {
	Ifx_P *scl_port, *sda_port;
	uint8 scl_pin, sda_pin;
	EI2C_Status status;
} EI2C_Typedef;

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void EI2C_Init(EI2C_Typedef *ei2c);

EI2C_Status EI2C_Mem_Read(EI2C_Typedef *ei2c, uint8 slaveAddress, uint8 MemAddress, uint8 *pData, uint16 size);

EI2C_Status EI2C_Mem_Write(EI2C_Typedef *ei2c, uint8 slaveAddress, uint8 MemAddress, uint8 *pData, uint16 size);

EI2C_Status EI2C_Call(EI2C_Typedef *ei2c, uint8 slaveAddress);

#endif /* XINDONGLIB_EI2C_H_ */
